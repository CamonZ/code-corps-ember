@mixin taskTypeButtonColors($type) {
  $background: map-get($taskTypeColors, $type);
  $text: map-get($taskTypeTextOnBackgroundColors, $type);

  $darker-color: darken($background, 5%);
  background-color: $background;
  border-color: $background;
  color: $text;
  &:hover {
    background-color: $darker-color;
    background-image: linear-gradient($background, $darker-color);
    border-color: $darker-color;
  }
}

@mixin primary-active {
  &.primary-active {
    &.active {
      background: $primary-color;
      border-color: $primary-color;
      color: white;
    }
  }
}

@mixin focus($color) {
  box-shadow: 0 0 0 1px #FFFFFF, 0 0 0 3px $color;
}

@mixin colorButton($color) {
  background: $color;
  border: 1px solid $color;
  &.on-solid {
    border: 1px solid white;
    &:hover {
      border: 1px solid white;
      color: white;
    }
  }
}

#{$all-buttons}, .button {
  color: white;
  border-radius: 4px;
  border-style: solid;
  border-width: 1px;
  padding: 11px 14px;
  font-family: $body-font-family;
  font-size: $body-font-size-normal;
  font-weight: 500;
  text-decoration: none;
  display: inline-block;

  &:focus {
    outline: none;
    @include focus($default-color);
  }

  &.small {
    font-size: $body-font-size-small;
    padding: 6px 14px;

    &.skill {
      padding: 6px 9px;
    }
  }

  &.large {
    font-size: $body-font-size-large;
    padding: 15px 40px;
  }

  &.clear {
    background: white;
    border: 1px solid $border-default;
    color: $dark-text;
    font-weight: 300;

    &:focus {
      background: $clear-focus;
      border-color: darken($border-default, 2%);
    }

    @include primary-active;
  }

  &.default {
    @include colorButton($default-color);
  }

  &.success {
    @include colorButton($success-color);
  }

  &.danger {
    @include colorButton($danger-color);
  }

  &.warning {
    @include colorButton($warning-color);
  }

  &.has-error {
    @include shake;
  }

  span {
    &.check-area, &.check-mark, &.x-mark {
      display: inline-block;
      height: 16px;
      margin: -3px 10px 0 0;
      vertical-align: middle;
      width: 18px;

      &.small {
        height: 10px;
        width: 12px;

        &.after {
          margin: -3px 0 0 6px;
        }
      }
    }

    &.check-area {
      @include sprite($check-area);
    }

    &.check-mark {
      @include sprite($check-mark);
    }

    &.x-mark {
      @include sprite($x-mark);
      &.small {
        @include sprite($x-mark-small);
      }
    }

    &.button-spinner {
      display: inline-block;
      margin: -4px 8px -2px -2px;
      vertical-align: middle;
      height: 22px;
      width: 22px;

      @include fadeIn(0.6s);
    }
  }

  &.clear {
    span {
      &.button-spinner {
        $file: "/assets/images/icons/button-spinner-on-clear";
        @include background-image-retina($file, "gif", 22px, 22px);
      }
    }
  }

  &.default {
    span {
      &.check-area {
        @include sprite($check-area-white);
      }

      &.button-spinner {
        $file: "/assets/images/icons/button-spinner-on-default";
        @include background-image-retina($file, "gif", 22px, 22px);
      }
    }
  }

  &.task { @include taskTypeButtonColors('task'); }
  &.issue { @include taskTypeButtonColors('issue'); }
  &.idea { @include taskTypeButtonColors('idea'); }
}

@mixin hoverButton($color) {
  $darker-color: darken($color, 5%);
  background: $darker-color;
  background-image: linear-gradient($color, $darker-color);
  border-color: $darker-color;
  color: white;
}

#{$all-buttons-hover}, .button:hover {
  cursor: pointer;

  &.default, &.clear, &.success, &.danger {
    @include transition(background 0.2s ease-in);
  }

  &.default {
    @include hoverButton($default-color);
  }

  &.clear {
    background: $clear-hover;
    background-image: linear-gradient(white, $clear-hover);
    border-color: $border-default;

    &:disabled {
      background: white;
    }
  }

  &.danger {
    @include hoverButton($danger-color);
  }

  &.success {
    @include hoverButton($success-color);
  }

  &.warning {
    @include hoverButton($warning-color);
  }

  &.can-delete {
    @include transition(background 0s ease-in);
    background: $red;
    border: 1px solid $red;
  }

  &:disabled {
    cursor: not-allowed;
  }
}

#{$all-buttons}, .button {
  &:not(.has-spinner) {
    &.active, &:active {
      &.clear {
        background: $clear-active;
        @include primary-active;
      }

      &.default {
        background: $primary-active;
      }
    }
  }
}

.button-group {
  @include clearfix;

  position: relative;
  display: inline-block;
  font-size: 0;
  vertical-align: middle;

  #{$all-buttons}, .button {
    border-radius: 4px;
    margin: 0 0 0 -1px;
    position: relative;

    &:first-child {
      margin-left: 0px;
    }

    &:not(:first-child) {
      border-top-left-radius: 0px;
      border-bottom-left-radius: 0px;
    }

    &:not(:last-child) {
      border-top-right-radius: 0px;
      border-bottom-right-radius: 0px;
    }

    &.active {
      z-index: 3;
    }
  }

  &.dropdown {
    #{$all-buttons}, .button {
      &::after {
        @include arrow-down;
        height: 8px;
        margin-left: 10px;
      }
    }
  }
}

p {
  #{$all-buttons}, .button {
    &.small {
      margin-right: 5px;
      padding-left: 8px;
      padding-right: 8px;
    }
  }

  &.clear {
    &:disabled {
      background: white;
    }
  }
}

select {
  &:focus {
    @include focus($default-color);
  }
}
